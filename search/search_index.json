{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to ALBiR Documentation","text":"<p>Hello! This is the official documentation for ALBiR module codebase.</p> <p>Here, you'll find detailed information about the methods, and functions for the following classes:</p> <ul> <li>Servo: <code>Servo</code> class is used to control the servo motors of the robot.</li> <li>Camera: <code>Camera</code> class is used to control the camera of the robot.</li> <li>Tuning: <code>Tuning</code> class is used to tune the parameters of the robot for exercise 2.</li> <li>Robot: <code>Robot</code> class is used to control the robot with tracking and driving for exercise 3.</li> </ul>"},{"location":"camera/","title":"Camera","text":"<p>             Bases: <code>object</code></p> <p>The Cam class manages the camera sensor for image capturing, processing, and color tracking. It initializes the camera parameters and sets the color thresholds for blob detection.</p>"},{"location":"camera/#camera.Cam.__init__","title":"<code>__init__()</code>","text":"<p>Initialise the Cam object by setting up camera parameters and configuring color thresholds.</p>"},{"location":"camera/#camera.Cam.get_big_blob","title":"<code>get_big_blob(blobs, img)</code>","text":"<p>Identify and return the largest blob from a list of detected blobs. Additionally, draw bounding boxes and centers on the identified blobs.</p> <p>Parameters:</p> Name Type Description Default <code>blobs</code> <code>list</code> <p>List of detected blobs.</p> required <code>img</code> <code>image</code> <p>Image to draw bounding box and cross on blobs.</p> required <p>Returns:</p> Name Type Description <code>big_blob</code> <code>blob</code> <p>The biggest blob from list - see OpenMV docs for blob class.</p>"},{"location":"camera/#camera.Cam.get_blobs","title":"<code>get_blobs()</code>","text":"<p>Capture an image and detect color blobs based on predefined thresholds.</p> <p>Returns:</p> Name Type Description <code>blobs</code> <code>list</code> <p>List of detected blobs.</p> <code>img</code> <code>image</code> <p>Captured image used to find blobs.</p>"},{"location":"robot/","title":"Robot","text":"<p>             Bases: <code>object</code></p> <p>A class to manage the functions of a robot for driving and tracking purposes using a camera and servos.</p>"},{"location":"robot/#robot.Robot.__init__","title":"<code>__init__(p=0.22, i=0.0, d=0.0, imax=0.0)</code>","text":"<p>Initializes the Robot object with given PID parameters.</p> <p>Parameters:</p> Name Type Description Default <code>p</code> <code>float</code> <p>Proportional gain for the PID.</p> <code>0.22</code> <code>i</code> <code>float</code> <p>Integral gain for the PID.</p> <code>0.0</code> <code>d</code> <code>float</code> <p>Derivative gain for the PID.</p> <code>0.0</code> <code>imax</code> <code>float</code> <p>Maximum Integral error for the PID.</p> <code>0.0</code>"},{"location":"robot/#robot.Robot.drive","title":"<code>drive(drive, bias)</code>","text":"<p>Differential drive function for the robot.</p> <p>Parameters:</p> Name Type Description Default <code>drive</code> <code>float</code> <p>Speed to set the servos to (-1~1) </p> required <code>bias</code> <code>float</code> <p>Bias to set the steering to (-1~1)</p> required"},{"location":"robot/#robot.Robot.follow_line","title":"<code>follow_line()</code>","text":"<p>Follows the line using the camera and drives towards it.</p>"},{"location":"robot/#robot.Robot.reset","title":"<code>reset()</code>","text":"<p>Resets the servo positions to their default states.</p>"},{"location":"robot/#robot.Robot.test","title":"<code>test(int)</code>","text":"<p>A test function for the Robot. Currently not implemented.</p> <p>Parameters:</p> Name Type Description Default <code>int</code> <code>float</code> <p>A sample input parameter for the test function.</p> required"},{"location":"robot/#robot.Robot.track_blob","title":"<code>track_blob(blob_id)</code>","text":"<p>Adjust the camera pan angle to track a specified blob based on its ID.</p> <p>Parameters:</p> Name Type Description Default <code>blob_id</code> <code>int</code> <p>The ID of the blob to track.</p> required <p>Returns:</p> Name Type Description <code>blob</code> <code>blob</code> <p>The blob object tracked, if found. Otherwise, returns None.</p>"},{"location":"servos/","title":"Servo","text":"<p>A class responsible for controlling servos via the OpenMV board.</p>"},{"location":"servos/#servos.Servo.__init__","title":"<code>__init__()</code>","text":"<p>Initialise the servo object and sets the tuning coefficients.</p>"},{"location":"servos/#servos.Servo.calc_speed","title":"<code>calc_speed(speed)</code>","text":"<p>Calculate corrected speed based on tuning coefficients.</p> <p>Parameters:</p> Name Type Description Default <code>speed</code> <code>float</code> <p>Desired wheel speed in the range of -1~1.</p> required <p>Returns:</p> Name Type Description <code>corr_speed</code> <code>float</code> <p>Corrected speed after applying tuning coefficients (-1~1).</p>"},{"location":"servos/#servos.Servo.release","title":"<code>release(index)</code>","text":"<p>Simple servo release method</p> <p>Parameters:</p> Name Type Description Default <code>index</code> <code>int</code> <p>Servo shield pin ID to reset.</p> required"},{"location":"servos/#servos.Servo.set_angle","title":"<code>set_angle(angle)</code>","text":"<p>Set the pan servo to a specific angle (in degrees).</p> <p>Parameters:</p> Name Type Description Default <code>angle</code> <code>float</code> <p>Desired angle (deg) for the camera pan servo.</p> required <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>Corrected angle (deg) of the camera pan servo.</p>"},{"location":"servos/#servos.Servo.set_speed","title":"<code>set_speed(l_speed, r_speed)</code>","text":"<p>Control the speed of the left and right wheel servos.</p> <p>Parameters:</p> Name Type Description Default <code>l_speed</code> <code>float</code> <p>Speed to set left wheel servo to (-1~1).</p> required <code>r_speed</code> <code>float</code> <p>Speed to set right wheel servo to (-1~1).</p> required"},{"location":"servos/#servos.Servo.soft_reset","title":"<code>soft_reset()</code>","text":"<p>Method to reset the servos to default and print a delay prompt.</p>"},{"location":"tuning/","title":"Tuning","text":"<p>             Bases: <code>object</code></p> <p>A class for managing PID tuning, servo calibration, and camera adjustments.</p>"},{"location":"tuning/#tuning.Tuning.__init__","title":"<code>__init__(p=0.22, i=0.0, d=0.0, imax=0.0)</code>","text":"<p>Initialise the Tuning object with given PID parameters.</p> <p>Parameters:</p> Name Type Description Default <code>p</code> <code>float</code> <p>Proportional gain.</p> <code>0.22</code> <code>i</code> <code>float</code> <p>Integral gain.</p> <code>0.0</code> <code>d</code> <code>float</code> <p>Derivative gain.</p> <code>0.0</code> <code>imax</code> <code>float</code> <p>Maximum Integral error.</p> <code>0.0</code>"},{"location":"tuning/#tuning.Tuning.calibrate","title":"<code>calibrate()</code>","text":"<p>Calibrate the pan positioning by setting max and min angles. Provides feedback during the process.</p>"},{"location":"tuning/#tuning.Tuning.measure","title":"<code>measure(freq)</code>","text":"<p>Measures the tracking error and pan angle of the red square target for a specified frequency of oscillation.</p> <p>Parameters:</p> Name Type Description Default <code>freq</code> <code>int</code> <p>Frequency of oscillation in (Hz).</p> required"},{"location":"tuning/#tuning.Tuning.update_pan","title":"<code>update_pan(blob)</code>","text":"<p>Adjust the camera pan by changing the servo angle based on the given blob's position.</p> <p>Parameters:</p> Name Type Description Default <code>blob</code> <code>blob</code> <p>Object retrieved from find_blobs - see OpenMV docs</p> required <p>Returns:</p> Name Type Description <code>angle_error</code> <code>float</code> <p>The difference in angle between the blob and pan servo </p> <code>pan_angle</code> <code>float</code> <p>Angle of the pan wrt. heading</p>"}]}